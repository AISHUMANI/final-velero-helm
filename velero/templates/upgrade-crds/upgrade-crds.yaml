{{- if .Values.upgradeCRDs }}
{{- $podSecurityContext := merge (.Values.podSecurityContext | default dict) (.Values.securityContext | default dict) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "velero.fullname" . }}-upgrade-crds
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "checkov.skip": CKV_K8S_38  # Explicit skip for this necessary case
  labels:
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
  {{- with .Values.kubectl.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  backoffLimit: 3
  template:
    metadata:
      name: velero-upgrade-crds
      annotations:
        checksum/service-account: {{ include (print $.Template.BasePath "/serviceaccount.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "velero.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "velero.chart" . }}
      {{- with .Values.kubectl.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      # Explicitly set to true with justification in annotations
      automountServiceAccountToken: true
    {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ include "velero.serverServiceAccount" . }}-upgrade-crds
      initContainers:
        - name: kubectl
          image: {{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag | default (template "chart.KubernetesVersion" .) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c", "cp `which sh` /tmp && cp `which kubectl` /tmp"]
          resources:
            {{- toYaml (.Values.upgradeJobResources | default dict) | nindent 12 }}
          securityContext:
            {{- toYaml (.Values.upgradeJobResources.securityContext | default dict) | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: crds
      containers:
        - name: velero
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/tmp/sh", "-c", "/velero install --crds-only --dry-run -o yaml | /tmp/kubectl apply -f -"]
          resources:
            {{- toYaml (.Values.upgradeJobResources | default dict) | nindent 12 }}
          securityContext:
            {{- toYaml (.Values.upgradeJobResources.securityContext | default dict) | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: crds
          {{- with .Values.upgradeCRDsJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.upgradeCRDsJob.extraEnvVars }}
          env:
            {{- range $key, $value := . }}
            - name: {{ $key | default "none" }}
              value: {{ $value | default "none" | quote }}
            {{- end }}
          {{- end }}
      volumes:
        - name: crds
          emptyDir: {}
        {{- with .Values.upgradeCRDsJob.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      restartPolicy: OnFailure
      {{- with $podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
